% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/raisinfit.R
\name{raisinfit}
\alias{raisinfit}
\title{RAISIN Fitting}
\usage{
raisinfit(
  expr,
  sample,
  testtype,
  design,
  intercept = TRUE,
  filtergene = FALSE,
  filtergenequantile = 0.5,
  ncores = detectCores()
)
}
\arguments{
\item{expr}{A numeric matrix of gene expression matrix. Each row is a gene and each column is a cell. Row names are gene names and column names are cell names. Cells from all samples should be included in this matrix.}

\item{sample}{A character vector indicating which sample each cell comes from. Need to correspond with column names in \code{expr}.}

\item{testtype}{One of 'paired', 'unpaired', 'continuous', and 'custom'. See details and examples.}

\item{design}{Format depends on \code{testtype}.
\itemize{
 \item{If \code{testtype} is "paired": a character data.frame with three columns: 'sample','individual', and 'feature'. Here 'sample' is the name of each group of cells, 'indivual' is the individual (person) each sample comes from, and 'feature' is in which group the sample belongs to. Only two unique values are allowed in 'feature'. See below for example.}
 \item{If \code{testtype} is "unpaired": a character data.frame with two columns: 'sample' and 'feature'. Here 'sample' is the name of each group of cells and 'feature' is in which group the sample belongs to. Only two unique values are allowed in 'feature'. See below for example.}
 \item{If \code{testtype} is "continuous": a data.frame with two columns: 'sample' and 'feature'. Here 'sample' is the name of each group of cells and 'feature' is a continuous varaible for each sample. See below for example.}
 \item{If \code{testtype} is "custom": a list with following elements. \code{X}: the design matrix for fixed effects. \code{Z}: the design matrix for random effects. \code{X} and \code{Z} must have the same row names, and the row names must be the unique values in \code{sample} argument (see example). \code{group}: a character vector with the same lengths as the number of columns in \code{Z}. For columns in \code{Z} with the same values in the corresponding entries in \code{group}, they share a variance component and will be estimated together.}
 }}

\item{intercept}{TRUE or FALSE. TRUE: add the intercept to the design matrix. FALSE: use the original design matrix without additional intercept. This should be set to be TRUE in most cases if no intercept already exists in design matrix. Only useful if \code{testtype} is not 'custom'.}

\item{filtergene}{If TRUE, filter out genes with low expression. Pseudobulks will be calculated by averaging the expression across cells within each sample. A gene is retained if there is at least one sample with pseudobulk expression larger than a cutoff. The cutoff is the \code{filtergenequantile} quantile of pseudobulks across all genes and samples.}

\item{filtergenequantile}{Only useful if \code{filtergene} is TRUE. Used to determine the cutoff for gene filtering. See \code{filtergene}.}

\item{ncores}{Number of cores to be used in the fitting.}
}
\value{
A list of elements used for raisintest.
}
\description{
Fitting RAISIN model
}
\details{
This function fits the RAISIN model and estimates the cell-level and sample-level variance. The output of the function will be used by \code{raisintest} function to generate pvalues and FDRs for statistical testing.

RAISIN provides four types of fitting specified by the \code{testtype} argument: 'paired', 'unpaired', 'continuous', and 'custom'.
\itemize{
 \item{"paired": differential analysis between two groups of samples, paired for individuals. This is often used to identify differential genes between two cell clusters. In many cases, each cell cluster contain cells from the same individual. It is allowed to have a mixture of paired and unpaired individuals. That is, some individuals may have cells in both cell clusters while some not.}
 \item{"unpaired": differential analysis between two groups of samples from different individuals. This is often used to identify differential genes between two groups of individuals within a cell cluster.}
 \item{"continuous": similar as "unpaired" mode, but identifies genes associated with a continuous variable instead of differential between two groups.}
 \item{"custom": used in more complicated cases, such as the need to control for batch effect.}
}
}
\examples{
# paired
res <- raisinfit(expr = matrix(rnorm(100*8),nrow=100,dimnames=list(paste0('gene_',1:100),paste0('cell_',1:8))),sample=rep(c('person1_celltype1','person2_celltype1','person1_celltype2','person3_celltype2'),each=2),testtype='paired',design = data.frame(sample=c('person1_celltype1','person2_celltype1','person1_celltype2','person3_celltype2'),individual=c('person1','person2','person1','person3'),feature=c('celltype1','celltype1','celltype2','celltype2')))
# unpaired
res <- raisinfit(expr = matrix(rnorm(100*8),nrow=100,dimnames=list(paste0('gene_',1:100),paste0('cell_',1:8))),sample=rep(c('person1','person2','person3','person4'),each=2),testtype='unpaired',design = data.frame(sample=c('person1','person2','person3','person4'),feature=c('group1','group1','group2','group2')))
# continuous
res <- raisinfit(expr = matrix(rnorm(100*8),nrow=100,dimnames=list(paste0('gene_',1:100),paste0('cell_',1:8))),sample=rep(c('person1','person2','person3','person4'),each=2),testtype='continuous',design = data.frame(sample=c('person1','person2','person3','person4'),feature=c(1,2,3,4)))
# custom
X <- cbind(1,c(0,0,1,1))
rownames(X) <- c('person1','person2','person3','person4')
Z <- diag(4)
rownames(Z) <- c('person1','person2','person3','person4')
res <- raisinfit(expr = matrix(rnorm(100*8),nrow=100,dimnames=list(paste0('gene_',1:100),paste0('cell_',1:8))),sample=rep(c('person1','person2','person3','person4'),each=2),testtype='custom',design = list(X=X,Z=Z,group=c('var1','var1','var2','var2')))
}
\author{
Zhicheng Ji<zhicheng.ji@duke.edu>, Wenpin Hou, Hongkai Ji
}
